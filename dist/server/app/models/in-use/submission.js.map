{"version":3,"sources":["../../../../../app/models/in-use/submission.js"],"names":["mongoose","require","Schema","ObjectId","Types","autoPopulate","_","mongoosePaginate","schemaOptions","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","timestamps","usePushEach","autoIndex","process","env","NODE_ENV","strict","submissionStructure","project","type","ref","level","String","enum","default","task","autopopulate","select","stakeholder","evidence","required","note","test","Boolean","submissionSchema","plugin","module","exports","model"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;AACA,IAAIC,WAAWD,OAAOE,KAAP,CAAaD,QAA5B;AACA,IAAIE,eAAeJ,QAAQ,uBAAR,CAAnB;AACA,IAAIK,IAAIL,QAAQ,YAAR,CAAR;AACA,IAAMM,mBAAmBN,QAAQ,mBAAR,CAAzB;;AAIA,IAAIO,gBAAgB;AAChBC,cAAU,KADM;AAEhBC,QAAI,KAFY;AAGhBC,YAAQ;AACJC,iBAAS,IADL;AAEJC,kBAAU,IAFN;AAGJJ,kBAAU,KAHN;AAIJK,oBAAY,KAJR;AAKJC,wBAAgB;AALZ,KAHQ;AAUhBC,cAAU;AACNJ,iBAAS,IADH;AAENC,kBAAU,IAFJ;AAGNJ,kBAAU,KAHJ;AAINK,oBAAY,KAJN;AAKNC,wBAAgB;AALV,KAVM;AAiBhBE,gBAAY,IAjBI;AAkBhBC,iBAAc,IAlBE;AAmBhBC,eAAWC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAnBpB;AAoBhBC,YAAQH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB;AApBjB,CAApB;;AAuBA,IAAIE,sBAAsB;AACtBC,aAAS;AACLC,cAAMvB,QADD;AAELwB,aAAK;AACL;AACA;AACA;AACA;AANK,KADa;;AAUtBC,WAAO;AACHF,cAAMG,MADH;AAEHC,cAAM,CAAC,SAAD,EAAY,MAAZ,CAFH;AAGHC,iBAAS;AAHN,KAVe;AAetBC,UAAM,EAAkB;AACpBN,cAAMvB,QADJ;AAEFwB,aAAK,MAFH;AAGFM,sBAAc;AACVC,oBACI;AAFM,SAHZ;AAOFH,iBAAS;AAPP,KAfgB;;AAyBtBI,iBAAa;AACTT,cAAMvB,QADG;AAETwB,aAAK,MAFI;AAGTI,iBAAS,IAHA;AAITE,sBAAc;AACVC,oBACE;AAFQ;AAJL,KAzBS;;AAmCtBE,cAAS;AACLV,cAAKG,MADA;AAELQ,kBAAS;AAFJ,KAnCa;AAuCtBC,UAAK;AACDZ,cAAKG,MADJ;AAEDE,iBAAQ;AAFP;;AAvCiB,CAA1B;;AA+CA,IAAIX,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCE,wBAAoBe,IAApB,GAA2B;AACvBb,cAAMc,OADiB;AAEvBT,iBAAS;AAFc,KAA3B;AAIH;;AAGD,IAAIU,mBAAmB,IAAIvC,MAAJ,CAAWsB,mBAAX,EAAgChB,aAAhC,CAAvB;AACAiC,iBAAiBC,MAAjB,CAAwBrC,YAAxB;AACAoC,iBAAiBC,MAAjB,CAAwBnC,gBAAxB;;AAEAoC,OAAOC,OAAP,GAAiB5C,SAAS6C,KAAT,CAAe,YAAf,EAA6BJ,gBAA7B,CAAjB","file":"submission.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nvar _ = require(\"underscore\");\nconst mongoosePaginate = require('mongoose-paginate');\n\n\n\nvar schemaOptions = {\n    minimize: false,\n    id: false,\n    toJSON: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    toObject: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    timestamps: true ,\n    usePushEach : true,\n    autoIndex: process.env.NODE_ENV === \"development\",\n    strict: process.env.NODE_ENV !== \"development\"\n};\n\nvar submissionStructure = {\n    project: {\n        type: ObjectId,\n        ref: \"Project\",\n        // autopopulate: {\n        //     select:\n        //         \"name activated _id, owner \"\n        // }\n    },\n\n    level: {\n        type: String,\n        enum: [\"project\", \"task\"],\n        default: \"task\"\n    },\n    task: {                 // can be null or not null depending on the level(project or task)\n        type: ObjectId,\n        ref: \"Task\",\n        autopopulate: {\n            select:\n                \"name _id createdAt updateAt\"\n        },\n        default: null\n    },\n\n    stakeholder: {\n        type: ObjectId,\n        ref: \"User\",\n        default: null,\n        autopopulate: {\n            select:\n              \"firstName lastName _id profilePhoto\"\n          }\n    },\n    \n    evidence:{\n        type:String,\n        required:true\n    },\n    note:{\n        type:String,\n        default:null\n    }\n   \n};\n\n\nif (process.env.NODE_ENV === \"development\") {\n    submissionStructure.test = {\n        type: Boolean,\n        default: true\n    };\n}\n\n\nvar submissionSchema = new Schema(submissionStructure, schemaOptions);\nsubmissionSchema.plugin(autoPopulate);\nsubmissionSchema.plugin(mongoosePaginate);\n\nmodule.exports = mongoose.model(\"Submission\", submissionSchema);\n"]}