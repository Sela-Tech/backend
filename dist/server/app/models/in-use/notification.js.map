{"version":3,"sources":["../../../../../app/models/in-use/notification.js"],"names":["mongoose","require","Schema","ObjectId","Types","autoPopulate","_","mongoosePaginate","schemaOptions","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","timestamps","autoIndex","process","env","NODE_ENV","strict","notificationStructure","project","type","ref","autopopulate","select","user","stakeholder","default","message","String","required","enum","read","Boolean","action","model","refPath","onModel","projectStructure","test","notificationSchema","plugin","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;AACA,IAAIC,WAAWD,OAAOE,KAAP,CAAaD,QAA5B;AACA,IAAIE,eAAeJ,QAAQ,uBAAR,CAAnB;AACA,IAAIK,IAAIL,QAAQ,YAAR,CAAR;AACA,IAAMM,mBAAiBN,QAAQ,mBAAR,CAAvB;;AAIA,IAAIO,gBAAgB;AAClBC,YAAU,KADQ;AAElBC,MAAI,KAFc;AAGlBC,UAAQ;AACNC,aAAS,IADH;AAENC,cAAU,IAFJ;AAGNJ,cAAU,KAHJ;AAINK,gBAAY,KAJN;AAKNC,oBAAgB;AALV,GAHU;AAUlBC,YAAU;AACRJ,aAAS,IADD;AAERC,cAAU,IAFF;AAGRJ,cAAU,KAHF;AAIRK,gBAAY,KAJJ;AAKRC,oBAAgB;AALR,GAVQ;AAiBlBE,cAAY,IAjBM;AAkBlBC,aAAWC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAlBlB;AAmBlBC,UAAQH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB;AAnBf,CAApB;;AAsBA,IAAIE,wBAAwB;AAC1BC,WAAS;AACPC,UAAMtB,QADC;AAEPuB,SAAK,SAFE;AAGPC,kBAAc;AACZC,cACE;AAFU;AAHP,GADiB;AAS1BC,QAAM;AACJJ,UAAMtB,QADF;AAEJuB,SAAK,MAFD;AAGJC,kBAAc;AACZC,cACE;AAFU;AAHV,GAToB;AAiB1BE,eAAY;AACVL,UAAMtB,QADI;AAEV4B,aAAQ,IAFE;AAGVL,SAAK,MAHK;AAIVC,kBAAc;AACZC,cACE;AAFU;AAJJ,GAjBc;AA0B1BI,WAAS;AACPP,UAAMQ,MADC;AAEPC,cAAS;AAFF,GA1BiB;AA8B1BT,QAAK;AACHA,UAAKQ,MADF;AAEHE,UAAK,CAAC,yBAAD,EAA2B,+BAA3B,EAA2D,mBAA3D,EAAgF,mBAAhF,EAAoG,mBAApG,EACD,+BADC,EACgC,4BADhC,EAC6D,6BAD7D,EAC2F,cAD3F,EAC0G,mBAD1G;AAFF,GA9BqB;AAmC1BC,QAAK;AACHX,UAAKY,OADF;AAEHN,aAAQ;AAFL,GAnCqB;AAuC1BO,UAAO;AACLb,UAAKQ,MADA;AAELE,UAAK,CAAC,UAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,UAApC,EAAgD,cAAhD,CAFA;AAGLJ,aAAQ;AAHH,GAvCmB;AA4C1BQ,SAAM;AACJd,UAAMvB,OAAOE,KAAP,CAAaD,QADf;AAEJ;AACAqC,aAAS,SAHL;AAIJnC,kBAAa;AAJT,GA5CoB;AAkD1BoC,WAAS;AACPhB,UAAMQ,MADC;AAEP;AACAE,UAAM,CAAC,MAAD,EAAS,WAAT,EAAqB,UAArB,EAAiC,aAAjC;AAHC;;AAlDiB,CAA5B;;AA2DA,IAAIhB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CqB,mBAAiBC,IAAjB,GAAwB;AACtBlB,UAAMY,OADgB;AAEtBN,aAAS;AAFa,GAAxB;AAID;;AAED;AACA;AACA;;AAEA,IAAIa,qBAAqB,IAAI1C,MAAJ,CAAWqB,qBAAX,EAAiCf,aAAjC,CAAzB;AACAoC,mBAAmBC,MAAnB,CAA0BxC,YAA1B;AACAuC,mBAAmBC,MAAnB,CAA0BtC,gBAA1B;;AAEAuC,OAAOC,OAAP,GAAiB/C,SAASuC,KAAT,CAAe,cAAf,EAA+BK,kBAA/B,CAAjB","file":"notification.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nvar _ = require(\"underscore\");\nconst mongoosePaginate=require('mongoose-paginate'); \n\n\n\nvar schemaOptions = {\n  minimize: false,\n  id: false,\n  toJSON: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  toObject: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  timestamps: true ,\n  autoIndex: process.env.NODE_ENV === \"development\",\n  strict: process.env.NODE_ENV !== \"development\"\n};\n\nvar notificationStructure = {\n  project: {\n    type: ObjectId,\n    ref: \"Project\",\n    autopopulate: {\n      select:\n        \"name activated _id owner \"\n    }\n  },\n  user: {\n    type: ObjectId,\n    ref: \"User\",\n    autopopulate: {\n      select:\n        \" _id firstName lastName\"\n    }\n  },\n  stakeholder:{\n    type: ObjectId,\n    default:null,\n    ref: \"User\",\n    autopopulate: {\n      select:\n        \"firstName lastName _id organization profilePhoto\"\n    }\n  },\n  message: {\n    type: String,\n    required:true\n  },\n  type:{\n    type:String,\n    enum:[\"REQUEST_TO_JOIN_PROJECT\",\"ACCEPT_INVITE_TO_JOIN_PROJECT\",\"PROPOSAL_APPROVED\", \"PROPOSAL_REVERTED\",\"PROPOSAL_REJECTED\",\n        \"REJECT_INVITE_TO_JOIN_PROJECT\", \"INVITATION_TO_JOIN_PROJECT\",\"YOU_SENT_INVITATION_TO_JOIN\",\"NEW_PROPOSAL\",\"PROPOSAL_ASSIGNED\"]\n  },\n  read:{\n    type:Boolean,\n    default:false\n  },\n  action:{\n    type:String,\n    enum:[\"ACCEPTED\",\"REJECTED\", \"APPROVED\", \"REQUIRED\", \"NOT_REQUIRED\"],\n    default:\"NOT_REQUIRED\"\n  },\n  model:{\n    type: Schema.Types.ObjectId,\n    // will look at the `onModel` property to find the right model. e.g task, transaction, proposal e.t.c\n    refPath: 'onModel',\n    autoPopulate:true\n  },\n  onModel: {\n    type: String,\n    // can be either of the document in the enum\n    enum: ['Task', 'Milestone',\"Proposal\", \"Transaction\"]\n  }\n  \n};\n\n\nif (process.env.NODE_ENV === \"development\") {\n  projectStructure.test = {\n    type: Boolean,\n    default: true\n  };\n}\n\n// var notificationSchemaOptions = _.extend({}, schemaOptions, {\n//   collection: \"notifications\"\n// });\n  \nvar notificationSchema = new Schema(notificationStructure,schemaOptions);\nnotificationSchema.plugin(autoPopulate);\nnotificationSchema.plugin(mongoosePaginate);\n\nmodule.exports = mongoose.model(\"Notification\", notificationSchema);\n"]}