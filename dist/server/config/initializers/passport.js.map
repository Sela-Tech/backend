{"version":3,"sources":["../../../../config/initializers/passport.js"],"names":["bcrypt","require","mongoose","passport","LocalStrategy","Strategy","module","exports","done","use","qop","username","password","UserModel","model","findOne","email","deleted","exec","err","user","message","compareSync","serializeUser","_id","deserializeUser","id","select"],"mappings":";;AAAA;AACA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,WAAWF,QAAQ,UAAR,CAAf;;AAEA;AACA,IAAIG,gBAAgBH,QAAQ,gBAAR,EAA0BI,QAA9C;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;;AAE5BA,WAAQ,OAAOA,IAAP,KAAgB,UAAjB,GAA+BA,IAA/B,GAAsC,YAAW,CAAE,CAA1D;;AAEAL,aAASM,GAAT,CAAa,YAAb,EAA2B,IAAIL,aAAJ,CAAkB,EAAEM,KAAK,MAAP,EAAlB,EACvB,UAASC,QAAT,EAAmBC,QAAnB,EAA6BJ,IAA7B,EAAmC;AAC/B,YAAIK,YAAYX,SAASY,KAAT,CAAe,MAAf,CAAhB;;AAEAD,kBACKE,OADL,CACa;AACLC,mBAAOL,QADF;AAELM,qBAAS;AAFJ,SADb,EAKKC,IALL,CAKU,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACtB,gBAAID,GAAJ,EAAS,OAAOX,KAAKW,GAAL,EAAU,KAAV,CAAP;AACT,gBAAI,CAACC,IAAL,EAAW,OAAOZ,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEa,SAAS,qBAAX,EAAlB,CAAP;;AAEX,gBAAI,CAACrB,OAAOsB,WAAP,CAAmBV,QAAnB,EAA6BQ,KAAKR,QAAlC,CAAL,EACI,OAAOJ,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEa,SAAS,qBAAX,EAAlB,CAAP;;AAEJ,mBAAOb,KAAK,IAAL,EAAWY,IAAX,CAAP;AACH,SAbL;AAeH,KAnBsB,CAA3B;;AAqBAjB,aAASoB,aAAT,CAAuB,UAASH,IAAT,EAAeZ,IAAf,EAAqB;;AAExCA,aAAK,IAAL,EAAW;AACP,mBAAOY,KAAKI;AADL,SAAX;AAIH,KAND;;AAQArB,aAASsB,eAAT,CAAyB,UAASL,IAAT,EAAeZ,IAAf,EAAqB;;AAE1C,YAAIkB,KAAKN,KAAKI,GAAd;;AAEA,YAAIX,YAAYX,SAASY,KAAT,CAAe,MAAf,CAAhB;;AAEAD,kBACKE,OADL,CACa;AACLW,gBAAIA,EADC;AAELT,qBAAS;AAFJ,SADb,EAKKU,MALL,CAKY,WALZ,EAMKT,IANL,CAMUV,IANV;AAQH,KAdD;;AAgBAA;AAEH,CAnDD","file":"passport.js","sourcesContent":["// libraries\nvar bcrypt = require('bcrypt');\nvar mongoose = require('mongoose');\nvar passport = require('passport');\n\n// strategies\nvar LocalStrategy = require('passport-local').Strategy;\n\nmodule.exports = function(done) {\n\n    done = (typeof done === 'function') ? done : function() {};\n\n    passport.use('local-user', new LocalStrategy({ qop: 'auth' },\n        function(username, password, done) {\n            var UserModel = mongoose.model('User');\n\n            UserModel\n                .findOne({\n                    email: username,\n                    deleted: false\n                })\n                .exec(function(err, user) {\n                    if (err) return done(err, false);\n                    if (!user) return done(null, false, { message: 'Incorrect username.' });\n\n                    if (!bcrypt.compareSync(password, user.password))\n                        return done(null, false, { message: 'Incorrect password.' });\n\n                    return done(null, user);\n                });\n\n        }));\n\n    passport.serializeUser(function(user, done) {\n\n        done(null, {\n            '_id': user._id\n        });\n\n    });\n\n    passport.deserializeUser(function(user, done) {\n\n        var id = user._id;\n\n        var UserModel = mongoose.model('User');\n\n        UserModel\n            .findOne({\n                id: id,\n                deleted: false,\n            })\n            .select('-password')\n            .exec(done);\n\n    });\n\n    done();\n\n};"]}