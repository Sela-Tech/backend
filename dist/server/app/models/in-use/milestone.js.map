{"version":3,"sources":["../../../../../app/models/in-use/milestone.js"],"names":["mongoose","require","Schema","ObjectId","Types","autoPopulate","_","mongoosePaginate","Project","Proposal","schemaOptions","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","timestamps","autoIndex","process","env","NODE_ENV","strict","milestoneStructure","project","type","ref","tasks","autopopulate","select","title","String","required","unique","createdBy","default","completed","Boolean","estimatedCost","Number","projectStructure","test","milestoneSchema","post","next","update","$pull","milestones","_id","plugin","module","exports","model"],"mappings":";;;;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;AACA,IAAIC,WAAWD,OAAOE,KAAP,CAAaD,QAA5B;AACA,IAAIE,eAAeJ,QAAQ,uBAAR,CAAnB;AACA,IAAIK,IAAIL,QAAQ,YAAR,CAAR;AACA,IAAMM,mBAAmBN,QAAQ,mBAAR,CAAzB;;AAIA;AACA,IAAMO,UAAUP,QAAQ,WAAR,CAAhB;AACA,IAAMQ,WAAWR,QAAQ,YAAR,CAAjB;;AAEA,IAAIS,gBAAgB;AAChBC,cAAU,KADM;AAEhBC,QAAI,KAFY;AAGhBC,YAAQ;AACJC,iBAAS,IADL;AAEJC,kBAAU,IAFN;AAGJJ,kBAAU,KAHN;AAIJK,oBAAY,KAJR;AAKJC,wBAAgB;AALZ,KAHQ;AAUhBC,cAAU;AACNJ,iBAAS,IADH;AAENC,kBAAU,IAFJ;AAGNJ,kBAAU,KAHJ;AAINK,oBAAY,KAJN;AAKNC,wBAAgB;AALV,KAVM;AAiBhBE,gBAAY,IAjBI;AAkBhBC,eAAWC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAlBpB;AAmBhBC,YAAQH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB;AAnBjB,CAApB;;AAsBA,IAAIE,qBAAqB;AACrBC,aAAS;AACLC,cAAMxB,QADD;AAELyB,aAAK;AACL;AACA;AACA;AACA;AANK,KADY;;AAUrBC,WAAO,CACH;AACIF,cAAMxB,QADV;AAEIyB,aAAK,MAFT;AAGIE,sBAAc;AACVC,oBACI;AAFM;AAHlB,KADG,CAVc;AAoBrBC,WAAO;AACHL,cAAMM,MADH;AAEHC,kBAAU,IAFP;AAGHC,gBAAQ;AAHL,KApBc;;AA0BrBC,eAAW;AACPT,cAAMxB,QADC;AAEPyB,aAAK,MAFE;AAGPS,iBAAS,IAHF;AAIPP,sBAAc;AACVC,oBACI;AAFM;AAJP,KA1BU;AAmCrBO,eAAW;AACPX,cAAMY,OADC;AAEPF,iBAAS;AAFF,KAnCU;AAuCrBG,mBAAe;AACXb,cAAMc,MADK;AAEXJ,iBAAS;AAFE;AAvCM,CAAzB;;AA8CA,IAAIhB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCmB,qBAAiBC,IAAjB,GAAwB;AACpBhB,cAAMY,OADc;AAEpBF,iBAAS;AAFW,KAAxB;AAIH;;AAGD,IAAIO,kBAAkB,IAAI1C,MAAJ,CAAWuB,kBAAX,EAA+Bf,aAA/B,CAAtB;;AAEAkC,gBAAgBC,IAAhB,CAAqB,QAArB;AAAA,uEAA+B,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEjBtC,QAAQuC,MAAR,CAAe,EAAf,EAAmB,EAAEC,OAAO,EAAEC,YAAY,EAAEC,KAAK,UAAKA,GAAZ,EAAd,EAAT,EAAnB,CAFiB;;AAAA;AAAA;AAAA,+BAGjBzC,SAASsC,MAAT,CAAgB,EAAhB,EAAoB,EAAEC,OAAO,EAAEC,YAAY,EAAEC,KAAK,UAAKA,GAAZ,EAAd,EAAT,EAApB,CAHiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAKvBJ;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B;;AAAA;AAAA;AAAA;AAAA;AAQAF,gBAAgBO,MAAhB,CAAuB9C,YAAvB;AACAuC,gBAAgBO,MAAhB,CAAuB5C,gBAAvB;;AAEA6C,OAAOC,OAAP,GAAiBrD,SAASsD,KAAT,CAAe,WAAf,EAA4BV,eAA5B,CAAjB","file":"milestone.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nvar _ = require(\"underscore\");\nconst mongoosePaginate = require('mongoose-paginate');\n\n\n\n//import related models\nconst Project = require('./project');\nconst Proposal = require('./proposal');\n\nvar schemaOptions = {\n    minimize: false,\n    id: false,\n    toJSON: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    toObject: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    timestamps: true,\n    autoIndex: process.env.NODE_ENV === \"development\",\n    strict: process.env.NODE_ENV !== \"development\"\n};\n\nvar milestoneStructure = {\n    project: {\n        type: ObjectId,\n        ref: \"Project\",\n        // autopopulate: {\n        //     select:\n        //         \"name activated _id owner\"\n        // }\n    },\n\n    tasks: [\n        {\n            type: ObjectId,\n            ref: \"Task\",\n            autopopulate: {\n                select:\n                    \" name description assignedTo status estimatedCost _id createdOn updatedOn dueDate\"\n            }\n        }\n    ],\n    title: {\n        type: String,\n        required: true,\n        unique: true\n    },\n\n    createdBy: {\n        type: ObjectId,\n        ref: \"User\",\n        default: null,\n        autopopulate: {\n            select:\n                \"isFunder isContractor isEvaluator firstName lastName email _id\"\n        }\n    },\n    completed: {\n        type: Boolean,\n        default: false\n    },\n    estimatedCost: {\n        type: Number,\n        default: 0\n    },\n};\n\n\nif (process.env.NODE_ENV === \"development\") {\n    projectStructure.test = {\n        type: Boolean,\n        default: true\n    };\n}\n\n\nvar milestoneSchema = new Schema(milestoneStructure, schemaOptions);\n\nmilestoneSchema.post('remove', async (next) => {\n    try {\n        await Project.update({}, { $pull: { milestones: { _id: this._id } } })\n        await Proposal.update({}, { $pull: { milestones: { _id: this._id } } })\n    } catch (error) {\n        next(error)\n    }\n});\nmilestoneSchema.plugin(autoPopulate);\nmilestoneSchema.plugin(mongoosePaginate);\n\nmodule.exports = mongoose.model(\"Milestone\", milestoneSchema);\n"]}