{"version":3,"sources":["../../../../../app/models/in-use/document.js"],"names":["mongoose","require","Schema","ObjectId","Types","autoPopulate","mongoosePaginate","Project","docStructure","project","type","ref","name","String","required","filetype","doc","filesize","docSchema","timestamps","post","next","update","$pull","documents","id","plugin","module","exports","model"],"mappings":";;;;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASF,SAASE,MAAtB;AACA,IAAIC,WAAWD,OAAOE,KAAP,CAAaD,QAA5B;AACA,IAAIE,eAAeJ,QAAQ,uBAAR,CAAnB;AACA,IAAMK,mBAAmBL,QAAQ,mBAAR,CAAzB;;AAEA;AACA,IAAMM,UAAUN,QAAQ,WAAR,CAAhB;;AAEA,IAAIO,eAAe;AACjBC,WAAS;AACPC,UAAMP,QADC;AAEPQ,SAAK;AAFE,GADQ;AAKjBC,QAAM;AACJF,UAAMG,MADF;AAEJC,cAAU;AAFN,GALW;AASjBC,YAAU;AACRL,UAAMG,MADE;AAERC,cAAU;AAFF,GATO;AAajBE,OAAK;AACHN,UAAMG,MADH;AAEHC,cAAU;AAFP,GAbY;AAiBjBG,YAAS;AACPP,UAAKG;AADE;AAjBQ,CAAnB;;AAsBA,IAAIK,YAAY,IAAIhB,MAAJ,CAAWM,YAAX,EAAyB,EAAEW,YAAY,IAAd,EAAzB,CAAhB;;AAEAD,UAAUE,IAAV,CAAe,QAAf;AAAA,qEAAyB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEfd,QAAQe,MAAR,CAAe,EAAf,EAAmB,EAAEC,OAAO,EAAEC,WAAW,EAAE,OAAO,UAAKC,EAAd,EAAb,EAAT,EAAnB,CAFe;;AAAA;;AAIrBJ;AAJqB;AAAA;;AAAA;AAAA;AAAA;;AAMrBA;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AASAH,UAAUQ,MAAV,CAAiBrB,YAAjB;AACAa,UAAUQ,MAAV,CAAiBpB,gBAAjB;;AAEAqB,OAAOC,OAAP,GAAiB5B,SAAS6B,KAAT,CAAe,UAAf,EAA2BX,SAA3B,CAAjB","file":"document.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nconst mongoosePaginate = require('mongoose-paginate');\n\n// import related models\nconst Project = require(\"./project\");\n\nvar docStructure = {\n  project: {\n    type: ObjectId,\n    ref: \"Project\"\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  filetype: {\n    type: String,\n    required: true\n  },\n  doc: {\n    type: String,\n    required: true\n  },\n  filesize:{\n    type:String\n  }\n};\n\nvar docSchema = new Schema(docStructure, { timestamps: true });\n\ndocSchema.post('remove', async (next) => {\n  try {\n    await Project.update({}, { $pull: { documents: { '_id': this.id } } });\n    \n    next();\n  } catch (error) {\n    next(error)\n  }\n})\ndocSchema.plugin(autoPopulate);\ndocSchema.plugin(mongoosePaginate);\n\nmodule.exports = mongoose.model(\"Document\", docSchema);\n"]}