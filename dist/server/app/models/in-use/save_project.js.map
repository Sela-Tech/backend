{"version":3,"sources":["../../../../../app/models/in-use/save_project.js"],"names":["mongoose","require","autoPopulate","mongoosePaginate","Schema","ObjectId","Types","saveProjectStructure","project","type","ref","required","autopopulate","select","user","schemaOptions","collection","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","timestamps","autoIndex","process","env","NODE_ENV","strict","test","Boolean","default","SaveProjectSchema","plugin","module","exports","model"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,eAAeD,QAAQ,uBAAR,CAAnB;AACA,IAAME,mBAAmBF,QAAQ,mBAAR,CAAzB;;AAEA,IAAIG,SAASJ,SAASI,MAAtB;AACA,IAAIC,WAAWD,OAAOE,KAAP,CAAaD,QAA5B;;AAEA,IAAIE,uBAAuB;;AAEzBC,WAAS;AACPC,UAAMJ,QADC;AAEPK,SAAK,SAFE;AAGPC,cAAU,IAHH;AAIPC,kBAAc;AACZC,cACE;AAFU;AAJP,GAFgB;AAWzBC,QAAM;AACJL,UAAMJ,QADF;AAEJK,SAAK,MAFD;AAGJC,cAAU,IAHN;AAIJT,kBAAc;AAJV;;AAXmB,CAA3B;;AAoBA,IAAIa,gBAAgB;AAClBC,cAAY,OADM;AAElBC,YAAU,KAFQ;AAGlBC,MAAI,KAHc;AAIlBC,UAAQ;AACNC,aAAS,IADH;AAENC,cAAU,IAFJ;AAGNJ,cAAU,KAHJ;AAINK,gBAAY,KAJN;AAKNC,oBAAgB;AALV,GAJU;AAWlBC,YAAU;AACRJ,aAAS,IADD;AAERC,cAAU,IAFF;AAGRJ,cAAU,KAHF;AAIRK,gBAAY,KAJJ;AAKRC,oBAAgB;AALR,GAXQ;AAkBlBE,cAAY,IAlBM;AAmBlBC,aAAWC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAnBlB;AAoBlBC,UAAQH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB;AApBf,CAApB;;AAuBA,IAAIF,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CtB,uBAAqBwB,IAArB,GAA4B;AAC1BtB,UAAMuB,OADoB;AAE1BC,aAAS;AAFiB,GAA5B;AAID;;AAGD,IAAIC,oBAAoB,IAAI9B,MAAJ,CAAWG,oBAAX,EAAiCQ,aAAjC,CAAxB;;AAEAmB,kBAAkBC,MAAlB,CAAyBjC,YAAzB;AACAgC,kBAAkBC,MAAlB,CAAyBhC,gBAAzB;AACAiC,OAAOC,OAAP,GAAiBrC,SAASsC,KAAT,CAAe,MAAf,EAAuBJ,iBAAvB,CAAjB","file":"save_project.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar autoPopulate = require(\"mongoose-autopopulate\");\nconst mongoosePaginate = require('mongoose-paginate');\n\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\n\nvar saveProjectStructure = {\n\n  project: {\n    type: ObjectId,\n    ref: \"Project\",\n    required: true,\n    autopopulate: {\n      select:\n        \"name activated _id owner location goal status\"\n    }\n  },\n  user: {\n    type: ObjectId,\n    ref: \"User\",\n    required: true,\n    autoPopulate: true\n  },\n\n};\n\nvar schemaOptions = {\n  collection: \"saves\",\n  minimize: false,\n  id: false,\n  toJSON: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  toObject: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  timestamps: true,\n  autoIndex: process.env.NODE_ENV === \"development\",\n  strict: process.env.NODE_ENV !== \"development\"\n};\n\nif (process.env.NODE_ENV === \"development\") {\n  saveProjectStructure.test = {\n    type: Boolean,\n    default: true\n  };\n}\n\n\nvar SaveProjectSchema = new Schema(saveProjectStructure, schemaOptions);\n\nSaveProjectSchema.plugin(autoPopulate);\nSaveProjectSchema.plugin(mongoosePaginate);\nmodule.exports = mongoose.model(\"Save\", SaveProjectSchema);\n"]}