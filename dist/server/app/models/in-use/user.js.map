{"version":3,"sources":["../../../../../app/models/in-use/user.js"],"names":["_","require","bcrypt","mongoose","Schema","ObjectId","Types","autoPopulate","mongoosePaginate","Project","Evidence","Milestone","Notifications","Proposal","Save","Task","Upload","userStructure","organization","type","ref","autopopulate","select","profilePhoto","String","default","profilePhotoKey","reputationScore","Number","firstName","required","min","max","lastName","username","unique","lowercase","email","phone","publicKey","isEvaluator","Boolean","isContractor","isFunder","activation","enum","verificationToken","isVerified","createdOn","Date","now","updatedOn","password","set","value","length","hashSync","genSaltSync","validate","resetPasswordToken","resetPasswordExpires","areasOfInterest","Array","socket","accountStatus","process","env","NODE_ENV","test","transformer","doc","ret","schemaOptions","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","autoIndex","safe","strict","userSchemaOptions","extend","collection","transform","UserSchema","pre","next","done","update","$set","post","remove","owner","_id","$pull","stakeholders","multi","evaluator","createdBy","user","stakeholder","proposedBy","assignedTo","completedBy","evaluators","methods","comparePassword","cb","compare","err","isMatch","plugin","module","exports","model"],"mappings":"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","file":"user.js","sourcesContent":["var _ = require(\"underscore\");\nvar bcrypt = require(\"bcrypt\");\nvar mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nconst mongoosePaginate = require('mongoose-paginate');\n\n// import related models\nconst Project = require(\"./project\");\nconst Evidence = require(\"./evidence\");\nconst Milestone = require(\"./milestone\");\nconst Notifications = require(\"./notification\");\nconst Proposal = require(\"./proposal\");\nconst Save = require(\"./save_project\");\nconst Task = require(\"./task\");\nconst Upload = require(\"./upload\");\n\nvar userStructure = {\n  organization: {\n    type: ObjectId,\n    ref: \"Organization\",\n    autopopulate: { select: \"name _id\" }\n  },\n  profilePhoto: {\n    type: String,\n    default:\"http://placehold.it/50\"\n  },\n  profilePhotoKey: {\n    type: String\n  },\n  reputationScore: {\n    type: Number,\n    default: 0\n  },\n  firstName: {\n    type: String,\n    required: true,\n    min: 1,\n    max: 100\n  },\n  lastName: {\n    type: String,\n    required: true,\n    min: 1,\n    max: 100\n  },\n  username: {\n    type: String,\n    unique: true,\n    lowercase: true\n  },\n  email: {\n    type: String,\n    unique: true,\n    lowercase: true,\n    default: null\n  },\n  phone: {\n    type: String,\n    unique: true,\n    lowercase: true,\n    default: null\n  },\n  publicKey: {\n    type: String,\n    unique: true\n  },\n  isEvaluator: {\n    type: Boolean,\n    required: true,\n    default: false\n  },\n  isContractor: {\n    type: Boolean,\n    required: true,\n    default: false\n  },\n  isFunder: {\n    type: Boolean,\n    required: true,\n    default: false\n  },\n  activation: {\n    type: String,\n    enum: [\"pending\", \"approved\"],\n    default: \"approved\"\n  },\n  verificationToken: {\n    type: String,\n  },\n  isVerified: {\n    type: Boolean,\n    default: false\n  },\n  createdOn: {\n    type: Date,\n    default: Date.now()\n  },\n  updatedOn: {\n    type: Date,\n    default: Date.now()\n  },\n  password: {\n    type: String,\n    min: [8, \"Password must me longer than 8 characters\"],\n    set: function (value) {\n      if (value.length < 8) {\n        return null;\n      }\n      return bcrypt.hashSync(value, bcrypt.genSaltSync());\n    },\n    validate: [\n      function () {\n        return !!this.password;\n      },\n      \"Password is incorrect\"\n    ]\n  },\n  resetPasswordToken: {\n    type: String,\n    default: null\n  },\n  resetPasswordExpires: {\n    type: Date,\n    default: null\n  },\n  areasOfInterest: {\n    type: Array,\n    default: []\n  },\n\n  socket: {\n    type: String,\n    default: null\n  },\n  accountStatus: {\n    type: Boolean,\n    default: true\n  }\n};\n\nif (process.env.NODE_ENV === \"development\") {\n  userStructure.test = {\n    type: Boolean,\n    default: true\n  };\n}\n\nvar transformer = function (doc, ret) { };\n\nvar schemaOptions = {\n  minimize: false,\n  id: false,\n  toJSON: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  toObject: {\n    getters: true,\n    virtuals: true,\n    minimize: false,\n    versionKey: false,\n    retainKeyOrder: true\n  },\n  autoIndex: false,\n  safe: true,\n  strict: process.env.NODE_ENV !== \"development\" // Only use strict in production\n};\n\nvar userSchemaOptions = _.extend({}, schemaOptions, {\n  collection: \"users\",\n  toJSON: {\n    transform: transformer // Add a Transformer to remove hide private fields\n  }\n});\n\nvar UserSchema = new Schema(userStructure, userSchemaOptions);\n\nUserSchema.pre(\"save\", true, function (next, done) {\n  next();\n\n  this.updatedOn = new Date();\n\n  done();\n});\n\nUserSchema.pre(\"update\", true, function (next, done) {\n  next();\n\n  this.update(\n    {},\n    {\n      $set: {\n        updatedOn: new Date()\n      }\n    }\n  );\n\n  done();\n});\n\nUserSchema.post('remove', async (next) => {\n  try {\n    //all methods below are for development purpose, user never really gets deleted from the platform\n    //comment all methods below before pushing to production\n    await Project.remove({ owner: this._id });\n    await Project.update({},\n      { $pull: { stakeholders: { 'stakeholders.user.information': this._id } } },\n      { multi: true });\n    await Evidence.remove({ evaluator: this._id });\n    await Milestone.remove({ createdBy: this._id });\n    await Notifications.remove({ user: this._id });\n    await Notifications.remove({ stakeholder: this._id });\n    await Proposal.remove({ proposedBy: this._id });\n    await Save.remove({ user: this._id });\n    await Task.remove({ createdBy: this._id });\n    await Task.remove({ assignedTo: this._id });\n    await Task.remove({ completedBy: this._id });\n\n    await Task.update({}, { $pull: { evaluators: { '._id': this._id } } });\n    await Upload.remove({ owner: this._id });\n\n\n    next();\n  } catch (error) {\n    next(error)\n  }\n})\n\nUserSchema.methods.comparePassword = function (password, cb) {\n  bcrypt.compare(password, this.password, function (err, isMatch) {\n    if (err) {\n      return cb(err, false);\n    }\n    return cb(null, isMatch);\n  });\n};\n\nUserSchema.plugin(autoPopulate);\nUserSchema.plugin(mongoosePaginate);\n//Export model\nmodule.exports = mongoose.model(\"User\", UserSchema);\n"]}