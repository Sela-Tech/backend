{"version":3,"sources":["../../../../../app/models/in-use/proposal.js"],"names":["mongoose","require","Schema","ObjectId","Types","autoPopulate","_","mongoosePaginate","Project","schemaOptions","minimize","id","toJSON","getters","virtuals","versionKey","retainKeyOrder","toObject","timestamps","usePushEach","autoIndex","process","env","NODE_ENV","strict","proposalStructure","proposalName","type","String","required","project","ref","milestones","autopopulate","select","proposedBy","assignedTo","default","approved","Boolean","status","enum","comments","actor","comment","createdAt","Date","now","projectStructure","test","proposalSchema","post","next","update","$pull","proposals","_id","plugin","module","exports","model"],"mappings":"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","file":"proposal.js","sourcesContent":["var mongoose = require(\"mongoose\");\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\nvar autoPopulate = require(\"mongoose-autopopulate\");\nvar _ = require(\"underscore\");\n\nconst mongoosePaginate=require('mongoose-paginate'); \n\nconst Project = require('./project');\n\n\nvar schemaOptions = {\n    minimize: false,\n    id: false,\n    toJSON: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    toObject: {\n        getters: true,\n        virtuals: true,\n        minimize: false,\n        versionKey: false,\n        retainKeyOrder: true\n    },\n    timestamps:true,\n    usePushEach : true,\n    autoIndex: process.env.NODE_ENV === \"development\",\n    strict: process.env.NODE_ENV !== \"development\"\n};\n\nvar proposalStructure = {\n    proposalName:{\n        type:String,\n        required:true\n    },\n    project: {\n        type: ObjectId,\n        ref: \"Project\",\n        // autopopulate: {\n        //     select:\n        //         \"name activated _id, owner stakeholders \"\n        // }\n    },\n\n    milestones: [{\n        type: ObjectId,\n        ref: \"Milestone\",\n        autopopulate: {\n            select:\n                \"title createdBy completed _id\"\n        }\n    }],\n    proposedBy: {\n        type: ObjectId,\n        ref: \"User\", autopopulate: {\n            select:\n                \"firstName lastName _id socket email profilePhoto\"\n        }\n    },\n    assignedTo:{\n        type: ObjectId,\n        ref: \"User\", autopopulate: {\n            select:\n                \"firstName lastName _id socket email profilePhoto\"\n        },\n        default:null\n    },\n    approved: {\n        type: Boolean,\n        default: false\n    },\n    status:{\n        type:String,\n        enum:[\"IN_REVIEW\", \"DECLINED\", \"APPROVED\",\"REVERTED\"],\n        default:\"IN_REVIEW\"\n    },\n    comments: [\n        {\n          actor: {\n              type: ObjectId,\n              ref: \"User\",\n              required: true,\n              autopopulate: {\n                select:\n                  \"isFunder isContractor isEvaluator firstName lastName  _id  profilePhoto \"\n              }\n            },\n            comment: {\n              type: String,\n              default: \"\"\n            },\n            createdAt:{\n                type:Date,\n                default:Date.now()\n            }\n          }\n      ],\n};\n\n\nif (process.env.NODE_ENV === \"development\") {\n    projectStructure.test = {\n        type: Boolean,\n        default: true\n    };\n}\n\n\nvar proposalSchema = new Schema(proposalStructure,schemaOptions);\n\nproposalSchema.post('remove', async (next) => {\n    try {\n        await Project.update({}, { $pull: { proposals: { _id: this._id } } })\n    } catch (error) {\n        next(error)\n    }\n});\n\nproposalSchema.plugin(autoPopulate);\nproposalSchema.plugin(mongoosePaginate);\n\nmodule.exports = mongoose.model(\"Proposal\", proposalSchema);\n"]}