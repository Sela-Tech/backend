{"version":3,"sources":["../../../../test/helpers/mockData.js"],"names":["faker","require","jsonwebtoken","mongoose","User","model","Organization","Project","Transaction","Uploads","Document","tokenValidityPeriod","bcrypt","users","email","phone","firstName","lastName","username","isEvaluator","isContractor","isFunder","password","activation","projects","name","description","startDate","location","insertUserSeed","insertOrganisation","organization_id","organization","newUser","save","user","insertProjectSeed","newProjects","insertMany","insertProject","userId","project","jobType","random","words","owner","newProject","org","obj","org_id","_id","generateToken","signThis","profilePhoto","id","SECRET","process","env","token","sign","expiresIn","validUser","validUser2","validUserUpdateInfo","oldPassword","invalidUserUpdateInfo","invalidUserUpdateInfo2","newPassword","verifyPassword","userWithExistingEmail","userWithExistingPhone","userWithWrongEmail","userWithWrongPhone","userWithWrongPassword","userWithPendingAccount","validProject","lat","lng","validStakeholders","stakeholders","invalidStakeholders","validTask","projectId","word","dueDate","invalidTask","validDocument","filetype","doc","internet","url","valideOrganization","validTrnInfo","hash","invalidTrnInfo","module","exports"],"mappings":"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","file":"mockData.js","sourcesContent":["const faker = require('faker');\nconst jsonwebtoken = require('jsonwebtoken');\nvar mongoose = require(\"mongoose\");\nvar User = mongoose.model(\"User\");\nvar Organization = mongoose.model(\"Organization\");\nvar Project = mongoose.model(\"Project\");\nvar Transaction = mongoose.model(\"Transaction\");\nvar Uploads = mongoose.model(\"Upload\");\nvar Document = mongoose.model(\"Document\");\nvar tokenValidityPeriod = 86400; // in seconds; 86400 seconds = 24 hours\nvar bcrypt = require(\"bcrypt\");\n\nconst users = [\n\t{\n\t\temail: \"somethree@mail.com\",\n\t\tphone: \"894738903584\",\n\t\tfirstName: \"userthree\",\n\t\tlastName: \"mylastname\",\n\t\tusername: \"userthree\",\n\t\tisEvaluator: false,\n\t\tisContractor: false,\n\t\tisFunder: true,\n\t\tpassword: \"mypassword\",\n\t\tactivation: \"approved\",\n\n\t}\n];\n\n\nconst projects = [\n\t{\n\t\tname: \"test project 1\",\n\t\tdescription: \"this is a simple test project 1\",\n\t\tstartDate: \"2018-11-29\",\n\t\tlocation: \"5bffe86b0dccba6f553d7257\"\n\t},\n\t{\n\t\tname: \"test project 2\",\n\t\tdescription: \"this is a simple test project 2\",\n\t\tstartDate: \"2018-11-29\",\n\t\tlocation: \"5bffe86b0dccba6f553d7257\"\n\t}\n];\n\n\n\n/**\n * @description Insert seed data in user model\n *\n * @returns {object} Nothing\n */\nconst insertUserSeed = async () => {\n\tlet organization_id = await insertOrganisation();\n\tusers[0].organization = organization_id\n\tlet newUser = new User(users[0])\n\tlet user = await newUser.save();\n\treturn user;\n};\n\n\n\n/**\n * @description Insert seed data in project model\n *\n * @returns {object} Nothing\n */\nconst insertProjectSeed=async()=>{\n\tlet newProjects = Project.insertMany(projects);\n\treturn newProjects;\n}\n\n\nconst insertProject =async(userId)=>{\n\n\tconst project ={\n\t\tname: faker.name.jobType(),\n\t\tdescription: faker.random.words(),\n\t\tstartDate: \"2018-11-29\",\n\t\tlocation: \"5bffe86b0dccba6f553d7257\",\n\t\towner:userId\n\t}\n\tlet newProject = await new Project(project).save();\n\treturn newProject;\n}\n\n/**\n * @description Insert seed data in organization model\n *\n * @returns {object}\n */\nconst insertOrganisation = async () => {\n\tconst organization = {\n\t\tname: \"my very own\"\n\t}\n\tlet org = new Organization(organization);\n\tlet obj = await org.save();\n\tlet org_id = obj._id;\n\treturn org_id;\n}\n\n\n\n/**\n * @description Generates token from seed data\n *\n * @param {Number} id - User object\n *\n * @returns {string} token - Generated token\n */\n\nconst generateToken = (user) => {\n\n\tconst { isFunder, isEvaluator, isContractor } = user,\n\t\tsignThis = {\n\t\t\tprofilePhoto: user.profilePhoto,\n\t\t\tid: user._id,\n\t\t\tisFunder,\n\t\t\tisEvaluator,\n\t\t\tisContractor,\n\t\t\tfirstName: user.firstName,\n\t\t\tphone: user.phone,\n\t\t\temail: user.email,\n\t\t\torganization: {\n\t\t\t\tname: user.organization.name,\n\t\t\t\tid: user.organization._id\n\t\t\t},\n\t\t\tlastName: user.lastName\n\t\t};\n\n\tconst tokenValidityPeriod = 86400\n\tconst { SECRET } = process.env;\n\n\tconst token = jsonwebtoken.sign(signThis, SECRET, {\n\t\texpiresIn: tokenValidityPeriod\n\t});\n\treturn token;\n};\n\n\nconst validUser = {\n\temail: \"usertwo@mail.com\",\n\tphone: \"8949000384\",\n\torganization: { name: \"test organisaction2\" },\n\tfirstName: \"usertwo\",\n\tlastName: \"mylastname2\",\n\tusername: \"usertwo\",\n\tisEvaluator: false,\n\tisContractor: false,\n\tisFunder: true,\n\tpassword: \"mypassword\",\n\tactivation: \"approved\"\n};\n\nconst validUser2 = {\n\temail: \"user10@mail.com\",\n\tphone: \"9309582038\",\n\torganization: {id:\"\", name: \"test organisaction2\" },\n\tfirstName: \"user10\",\n\tlastName: \"mylastname10\",\n\tusername: \"user10\",\n\tisEvaluator: false,\n\tisContractor: false,\n\tisFunder: true,\n\tpassword: \"mypassword\",\n};\n\nconst validUserUpdateInfo = {\n\tfirstName: \"newname\",\n\tlastName: \"mylastname\",\n\tusername: \"userthree\",\n\tpassword: 'mypassword',\n\toldPassword: \"mypassword\",\n};\n\n\nconst invalidUserUpdateInfo = {\n\tfirstName: \"newname\",\n\tlastName: \"mylastname\",\n\tusername: \"userthree\",\n\tpassword: 'mypassword',//same as the current password\n\toldPassword: \"mypasswor\", //same as the current password\n};\n\nconst invalidUserUpdateInfo2 = {\n\tnewPassword: 'mypasswording',\n\tverifyPassword: 'weirdo',\n\toldPassword: \"mypassword\", //same as the current password\n};\n\nconst userWithExistingEmail = {\n\temail: \"usertwo@mail.com\",\n\tphone: \"890384\",\n\torganization: { name: \"test organisaction2\" },\n\tfirstName: \"usertwo\",\n\tlastName: \"mylastname2\",\n\tusername: \"usertwo\",\n\tisEvaluator: false,\n\tisContractor: false,\n\tisFunder: true,\n\tpassword: \"mypassword\"\n};\n\nconst userWithExistingPhone = {\n\tphone: \"8949000384\",\n\torganization: { name: \"test organisaction2\" },\n\tfirstName: \"usertwo\",\n\tlastName: \"mylastname2\",\n\tusername: \"usertwo\",\n\tisEvaluator: false,\n\tisContractor: false,\n\tisFunder: true,\n\tpassword: \"mypassword\"\n};\n\nconst userWithWrongEmail = {\n\temail: \"user@mail.com\",\n\t// phone:\"890384\",\n};\n\nconst userWithWrongPhone = {\n\t// email:\"user@mail.com\",\n\tphone: \"890384\",\n};\n\n\nconst userWithWrongPassword = {\n\temail: \"usertwo@mail.com\",\n\tpassword: \"mypasword\"\n}\n\nconst userWithPendingAccount = {\n\temail: \"user10@mail.com\",\n\tpassword: \"mypassword\"\n}\n\nconst validProject = {\n\tname: \"test project 1\",\n\tdescription: \"this is a simple test project 1\",\n\tstartDate: \"2018-11-29\",\n\tlocation: {\n\t\tname: \"south-west\",\n\t\tlat: 945054,\n\t\tlng: 744738\n\t}\n}\n\nconst validStakeholders={\n\t\n\t\tid:\"5bffe8da0dccba6f553d725a\",//placeholder project_id\n\t\tstakeholders:[\n\t\t\t\"5bfea5d6f85a44271f4c3416\"\n\t]\n\t\n}\n\nconst invalidStakeholders={\n\t\n\tid:\"5bffe8da0dccba6f553d725a\", //placeholder project_id\n\tstakeholders:[]\n\n}\n\nconst validTask={\n\tprojectId:\"5bffe8da0dccba6f553d725a\", //placeholder id\n\t  name:faker.random.word(),\n\t  description:faker.random.word(),\n\t  dueDate: \"2019-11-29\",\n}\n\nconst invalidTask={\n\tprojectId:\"5bffe8da0dcjfirj725a\", //placeholder id\n\t  name:faker.random.word(),\n\t  description:faker.random.word(),\n\t  dueDate: \"2019-11-29\",\n}\n\n\nconst validDocument={\n\tprojectId:\"5bffe8da0dccba6f553d725a\", //placeholder id\n\t  name:faker.random.word(),\n      filetype:\".doc\",\n      doc:faker.internet.url(),\n}\n\nvalideOrganization={\n\tname:faker.random.word()\n},\n validTrnInfo={\n\t projectId:\"84y389hfni43u858guhfn3\",// placeholder projectId. will be replaced by an actual projectId\n\t hash:\"0xae86805b18560084383a69ebfad7ac740c7b57907e079117fd09ad60a5d862b7\" // hash from etherscan.io \n\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// with reasonable confirmations\n }\n\n invalidTrnInfo={\n\t projectId:\"gfb3h98y347gfc 20394\",\n\t hash:\"0x28524eac7b663f0db3e614749058c13eb9eb1fde2fe476aafe733802ee9d466f\"//get a fresh block hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // with less 30 confirmation \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //from etherscan.io\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //before running the test\n }\n \n\nmodule.exports = {\n\tinsertUserSeed, validUser, userWithExistingEmail,\n\tuserWithWrongEmail, userWithWrongPhone, userWithWrongPassword,\n\tvalidUser2, userWithPendingAccount, generateToken, validUserUpdateInfo, invalidUserUpdateInfo,\n\tinvalidUserUpdateInfo2, validProject,insertProjectSeed,validStakeholders,invalidStakeholders,\n\tvalidDocument,insertProject,valideOrganization,validTrnInfo,invalidTrnInfo, validTask, invalidTask,\n\tuserWithExistingPhone\n}"]}