{"version":3,"sources":["../../../../config/environments/all.js"],"names":["express","require","expressBodyParser","expressMulter","expressRequestParam","session","passport","upload","sess","secret","process","env","SECRET","cookie","resave","saveUninitialized","module","exports","locals","ENVIRONMENT","NODE_ENV","use","req","res","next","path","indexOf","status","render","header","urlencoded","extended","json","set","secure","initialize"],"mappings":";;AAAA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,oBAAoBD,QAAQ,aAAR,CAAxB;AACA,IAAIE,gBAAgBF,QAAQ,QAAR,CAApB;AACA,IAAIG,sBAAsBH,QAAQ,eAAR,CAA1B;AACA,IAAII,UAAUJ,QAAQ,iBAAR,CAAd;AACA,IAAIK,WAAWL,QAAQ,UAAR,CAAf;;AAEA;AACA,IAAIM,SAASJ,eAAb;;AAEA,IAAIK,OAAO;AACTC,UAAQC,QAAQC,GAAR,CAAYC,MADX;AAETC,UAAQ,EAFC;AAGTC,UAAQ,IAHC;AAITC,qBAAmB;AAJV,CAAX;;AAOAC,OAAOC,OAAP,GAAiB,YAAW;AAC1B,OAAKC,MAAL,CAAYC,WAAZ,GAA0BT,QAAQC,GAAR,CAAYS,QAAZ,IAAwB,aAAlD;;AAEA;;AAEA;AACA,OAAKC,GAAL,CAAS,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC,QAAIF,IAAIG,IAAJ,IAAYH,IAAIG,IAAJ,CAASC,OAAT,CAAiB,MAAjB,MAA6B,CAAC,CAA9C,EAAiD;AAC/CH,UAAII,MAAJ,CAAW,GAAX;AACAJ,UAAIK,MAAJ,CAAW,mBAAX;AACA;AACD;;AAEDJ;AACD,GARD;;AAUA,OAAKH,GAAL,CAAS,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChCD,QAAIM,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAN,QAAIM,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;AACAN,QAAIM,MAAJ,CACE,8BADF,EAEE,oGAFF;;AAKAL;AACD,GATD;;AAWA,OAAKH,GAAL,CAASjB,qBAAT;;AAEA,OAAKiB,GAAL,CACEnB,kBAAkB4B,UAAlB,CAA6B;AAC3BC,cAAU;AADiB,GAA7B,CADF;;AAMA,OAAKV,GAAL,CAASnB,kBAAkB8B,IAAlB,EAAT;;AAEA,MAAI,KAAKd,MAAL,CAAYC,WAAZ,KAA4B,YAAhC,EAA8C;AAC5C,SAAKc,GAAL,CAAS,aAAT,EAAwB,CAAxB,EAD4C,CAChB;AAC5BzB,SAAKK,MAAL,CAAYqB,MAAZ,GAAqB,IAArB,CAF4C,CAEjB;AAC5B;;AAED,OAAKb,GAAL,CAAShB,QAAQG,IAAR,CAAT;;AAEA,OAAKa,GAAL,CAASf,SAAS6B,UAAT,EAAT;AACA,OAAKd,GAAL,CAASf,SAASD,OAAT,EAAT;AACD,CA9CD","file":"all.js","sourcesContent":["// libraries\nvar express = require(\"express\");\nvar expressBodyParser = require(\"body-parser\");\nvar expressMulter = require(\"multer\");\nvar expressRequestParam = require(\"request-param\");\nvar session = require(\"express-session\");\nvar passport = require(\"passport\");\n\n// instances\nvar upload = expressMulter();\n\nvar sess = {\n  secret: process.env.SECRET,\n  cookie: {},\n  resave: true,\n  saveUninitialized: true\n};\n\nmodule.exports = function() {\n  this.locals.ENVIRONMENT = process.env.NODE_ENV || \"development\";\n\n  // configure Express middleware\n\n  // ignore all git requests\n  this.use(function(req, res, next) {\n    if (req.path && req.path.indexOf(\".git\") !== -1) {\n      res.status(404);\n      res.render(\"public/errors/404\");\n      return;\n    }\n\n    next();\n  });\n\n  this.use(function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Methods\", \"OPTIONS,GET,PUT,POST,DELETE\");\n    res.header(\n      \"Access-Control-Allow-Headers\",\n      \"X-Access-Token,Public,Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-version\"\n    );\n\n    next();\n  });\n\n  this.use(expressRequestParam());\n\n  this.use(\n    expressBodyParser.urlencoded({\n      extended: true\n    })\n  );\n\n  this.use(expressBodyParser.json());\n\n  if (this.locals.ENVIRONMENT === \"production\") {\n    this.set(\"trust proxy\", 1); // trust first proxy\n    sess.cookie.secure = true; // serve secure cookies\n  }\n\n  this.use(session(sess));\n\n  this.use(passport.initialize());\n  this.use(passport.session());\n};\n"]}