{"version":3,"sources":["../../../../app/controllers/Comments.js"],"names":["require","config","mongoose","Proposal","model","validate","_","Helper","Comment","req","res","validateAddComment","errors","validationErrors","status","json","message","body","projectId","proposalId","comment","findOne","_id","project","proposal","roles","includes","proposedBy","toString","userId","owner","comments","push","actor","save","newComment","length","console","log","module","exports"],"mappings":"AAAA;;;;;;;;AACAA,QAAQ,QAAR,EAAkBC,MAAlB;AACA,IAAMC,WAAWF,QAAQ,UAAR,CAAjB;AAAA,IACIG,WAAWD,SAASE,KAAT,CAAe,UAAf,CADf;AAEA,IAAMC,WAAWL,QAAQ,2BAAR,CAAjB;AACA,IAAMM,IAAIN,QAAQ,QAAR,CAAV;AACA,IAAMO,SAASP,QAAQ,kBAAR,CAAf;;AAEA;;;AAGA;;;;;;IAKMQ,O;;;;;;;;;AAEF;;;;;;;;;;;gGAU+BC,G,EAAKC,G;;;;;;;AAChCL,yCAASM,kBAAT,CAA4BF,GAA5B,EAAiCC,GAAjC;AACME,sC,GAASH,IAAII,gBAAJ,E;;qCAEXD,M;;;;;iEACOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,6CAASJ;AADe,iCAArB,C;;;;4CAO8CH,G,CAA7CQ,I,EAAQC,S,aAAAA,S,EAAWC,U,aAAAA,U,EAAYC,O,aAAAA,O;;uCAElBjB,SAASkB,OAAT,CAAiB,EAAEC,KAAKH,UAAP,EAAmBI,SAASL,SAA5B,EAAjB,C;;;AAAjBM,wC;;oCACCA,Q;;;;;iEACMd,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,0BAAX,EAArB,C;;;sCAGPP,IAAIgB,KAAJ,CAAUC,QAAV,CAAmB,cAAnB,KAAsCF,SAASG,UAAT,CAAoBL,GAApB,CAAwBM,QAAxB,OAAuCnB,IAAIoB,M;;;;;iEAC1EnB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,+CAAX,EAArB,C;;;sCACAP,IAAIgB,KAAJ,CAAUC,QAAV,CAAmB,UAAnB,KAAkCF,SAASD,OAAT,CAAiBO,KAAjB,CAAuBR,GAAvB,CAA2BM,QAA3B,OAA0CnB,IAAIoB,M;;;;;iEAChFnB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,+CAAX,EAArB,C;;;;AAGXQ,yCAASO,QAAT,CAAkBC,IAAlB,CAAuB,EAAEC,OAAOxB,IAAIoB,MAAb,EAAqBT,gBAArB,EAAvB;;uCACuBI,SAASU,IAAT,E;;;AAAnBC,0C;iEAKGzB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEK,SAASe,WAAWJ,QAAX,CAAoBI,WAAWJ,QAAX,CAAoBK,MAApB,GAA6B,CAAjD,CAAX,EAArB,C;;;;;;AAGPC,wCAAQC,GAAR;iEACO5B,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,6CAAS,YAAMA;AADS,iCAArB,C;;;;;;;;;;;;;;;;;;;;;AAWnBuB,OAAOC,OAAP,GAAiB,EAAEhC,gBAAF,EAAjB","file":"Comments.js","sourcesContent":["\"use strict\";\nrequire(\"dotenv\").config();\nconst mongoose = require(\"mongoose\"),\n    Proposal = mongoose.model(\"Proposal\");\nconst validate = require('../../middleware/validate');\nconst _ = require('lodash');\nconst Helper = require('../helper/helper')\n\n// const helper = new Helper();\n\n\n/**\n *\n *\n * @class Comment\n */\nclass Comment {\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} req\n     * @param {*} res\n     * @returns {object}\n     * @memberof Comment\n     * @description a method than allows both project owner and contractor to comment on a submitted proposal\n     */\n    static async commentOnProposal(req, res) {\n        validate.validateAddComment(req, res)\n        const errors = req.validationErrors();\n\n        if (errors) {\n            return res.status(400).json({\n                message: errors\n            });\n        }\n\n\n        try {\n            const { body: { projectId, proposalId, comment } } = req;\n\n            let proposal = await Proposal.findOne({ _id: proposalId, project: projectId });\n            if (!proposal) {\n                return res.status(404).json({ message: 'Proposal doesn\\'t exist.' });\n            }\n\n            if (req.roles.includes('isContractor') && proposal.proposedBy._id.toString() !== req.userId) {\n                return res.status(403).json({ message: 'You are not allowed to perform this operation' })\n            } else if (req.roles.includes('isFunder') && proposal.project.owner._id.toString() !== req.userId) {\n                return res.status(403).json({ message: 'You are not allowed to perform this operation' })\n            }\n\n            proposal.comments.push({ actor: req.userId, comment });\n            let newComment = await proposal.save();\n\n            // return res.json(proposal)\n\n\n            return res.status(200).json({ comment: newComment.comments[newComment.comments.length - 1] });\n\n        } catch (error) {\n            console.log(error);\n            return res.status(501).json({\n                message: error.message\n            });\n        }\n\n\n    }\n\n\n}\n\nmodule.exports = { Comment };\n\n"]}